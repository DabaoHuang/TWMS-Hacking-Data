[ENABLE]
alloc(MyAutoLR,1024)
alloc(MyAutoLRKey,4)
alloc(MyAutoLRKeyLR,4)
alloc(tick,4)
alloc(delay,4)
alloc(nextGo,4)
registersymbol(step)
alloc(step,4)
label(MyAutoLR00)
label(MyAutoLR01)
label(MyAutoLR02)
label(test1)
label(test2)
label(SetLR)
label(back)
label(Set01)
label(Set02)
//-----------------------------------------------
MyAutoLRKey:
DD 1
MyAutoLRKeyLR:
DD 0
step:
DD 0
delay:
DD 500
//-----------------------------------------------
MyAutoLR:
cmp [step],0
je 007D05A7
cmp [step],2
jle back
push eax
call 007a2beb
sub eax,[delay]
cmp eax,[nextGo]
pop eax
jbe  MyAutoLR00
push eax
call 007a2beb
add eax,[delay]
mov [nextGo],eax
pop eax
jmp  SetLR

SetLR:

cmp [step],3
je Set02
cmp [step],4
je Set01
Set01:
mov [step],1
jmp back
Set02:
mov [step],2
jmp back
back:
cmp [step],1
je test1
cmp [step],2
je test2
jmp MyAutoLR00

test1:
add [MyAutoLRKeyLR],1
cmp [MyAutoLRKeyLR],12//¥ª¥k²¾°Ê¶ZÂ÷
jle MyAutoLR01
mov [step],3
mov [MyAutoLRKeyLR],0
jmp MyAutoLR02
test2:
add [MyAutoLRKeyLR],1
cmp [MyAutoLRKeyLR],12//¥ª¥k²¾°Ê¶ZÂ÷*2
jle MyAutoLR02
mov [step],4
mov [MyAutoLRKeyLR],0
jmp MyAutoLR01
MyAutoLR01:
mov [ebp-8],ffffffff
xor eax,eax
xor esi,esi
cmp [ebp-04],esi
lea ecx,[edi+00000234]
jmp 007D07C9
MyAutoLR02:
mov [ebp-8],1
xor eax,eax
xor esi,esi
cmp [ebp-04],esi
lea ecx,[edi+00000234]
jmp 007D07C9
MyAutoLR00:
xor eax,eax
xor esi,esi
cmp [ebp-04],esi
lea ecx,[edi+00000234]
mov [MyAutoLRKeyLR],0
jmp 007D07C9

007D05A1:
Jmp MyAutoLR
nop

step:
dd 1
[DISABLE]
007D05A1:
call dword ptr [00ad4980]

dealloc(MyAutoLR)
dealloc(MyAutoLRKey)
dealloc(MyAutoLRKeyLR)
dealloc(tick)
dealloc(delay)
dealloc(nextGo)
unregistersymbol(step)
dealloc(step,4)